<?php
/*
 Plugin Name: Blog To PDF
 Plugin URI: http://www.zingiri.com
 Description: Blog to pdf allows you to export any section of your Wordpress to a PDF document
 Author: Zingiri
 Version: 1.0.2
 Author URI: http://www.zingiri.com/
 */

define('BLOGTOPDF_NAME','Blog To PDF');
define('BLOGTOPDF_SLUG','blogtopdf');

$blogToPdf=new blogtopdf();
add_filter( 'init', array($blogToPdf,'init') );
add_action( 'save_post', array($blogToPdf, 'savePost') );

require(dirname(__FILE__).'/controlpanel.php');
require(dirname(__FILE__).'/includes/widgets.php');

class blogtopdf {
	function init() {
		if (isset($_REQUEST['blogtopdf']) && $_REQUEST['blogtopdf']) {
			$postId=intval($_REQUEST['blogtopdf']);
			$pdfImage=$_REQUEST['pdfimage'];
			$pdfTitle=$_REQUEST['pdftitle'];
			$this->generatePdf($postId,$pdfTitle,$pdfImage);
		}
	}

	function savePost($postId) {
		$cache=get_option('blogtopdf_cache');
		unset($cache[$postId]);
		update_option('blogtopdf_cache',$cache);
	}

	function generatePdf($postId,$pdfTitle,$pdfImage) {
		$m='';
		$pageBreak='<div style="page-break-before: always;"></div>';
		$m=file_get_contents(dirname(__FILE__).'/templates/default.html');
		//if (get_option('blogtopdf_default_stylesheet')) {
		$stylesheet=get_stylesheet_uri();
		$stylesheet=apply_filters('blogtopdf_stylesheet_filter',$stylesheet);
		
		$m=str_replace('[STYLESHEET]',$stylesheet,$m);
		$m=str_replace('[STYLESHEET2]',plugins_url('blogtopdf').'/templates/default.css',$m);
		$content='';
		$upload = wp_upload_dir();
		$dir=$upload['path'].'/';
		$url=$upload['url'].'/';
		require(dirname(__FILE__).'/dompdf/dompdf_config.inc.php');
		$post=get_post($postId);

		//Pro filter
		$m=apply_filters('blogtopdf_toc',$m,$postId);

		//Page footer
		$stamp='Generated by Blog To PDF on '.date('Y-m-d H:i:s');
		$pre='<script type="text/php">
      		if ( isset($pdf) ) { 
        		$font = Font_Metrics::get_font("helvetica", "normal");
        		$size = 9;
        		$y = $pdf->get_height() - 40;
        		$x = 40;
        		$pdf->page_text($x, $y, "'.$stamp.'", $font, $size);
			} 
    	</script>';

		//Main content
		$content.=$this->getChildren($postId);

		//Other
		$m=str_replace('[IMAGEURL]',$pdfImage,$m);
		$m=str_replace('[TITLE]',$pdfTitle,$m);
		$m=str_replace('[CONTENT]',$content,$m);

		//Defaults
		$m=str_replace('[PRE]',$pre,$m);
		$m=str_replace('[POST','',$m);
		$m=str_replace('[TOC]','',$m);

		//Check if file exists
		$cache=get_option('blogtopdf_cache');
		if (!$cache) $cache=array();
		$name=($pdfTitle ? '' : 'blogtopdf-').$post->post_name.'.pdf';
		if (!get_option('blogtopdf_cached') || !isset($cache[$postId])) {
			//Generate PDF
			$dompdf = new DOMPDF();
			$dompdf->load_html($m);
			$dompdf->render();
			$output = $dompdf->output();
			file_put_contents($dir.$name, $output);
			$cache[$postId]=$url.$name;
			update_option('blogtopdf_cache',$cache);
			header('Location:'.$url.$name);
		} else {
			header('Location:'.$cache[$postId]);
		}
		die();
	}

	function getChildren($postId,$level=1) {
		$m='';
		$children=get_children(array('post_parent' => $postId,'orderby'=>'menu_order','order'=>'ASC'));
		$post=get_post($postId);
		if ($level <= 1) $m.='<div style="page-break-before: always;"></div>';
		$m.='<h'.$level.'>'.$post->post_title.'</h'.$level.'>';
		$m=apply_filters('blogtopdf_children',$m,$postId);
		$m.=$post->post_content;
		if (count($children) > 0) {
			foreach ($children as $child) {
				$m.=$this->getChildren($child->ID,$level+1);
			}
		}
		return $m;
	}
}